# This file is a template, and might need editing before it works on your project.
# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/index.html#stages
#
# You can copy and paste this template into a new `.gitlab-ci.yml` file.
# You should not add this template to an existing `.gitlab-ci.yml` file by using the `include:` keyword.
#
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml

workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    - if: $CI_PIPELINE_SOURCE == 'push'

stages:          # List of stages for jobs, and their order of execution
  - build
  - test

build-job:       # This job runs in the build stage, which runs first.
  tags:
    - dsc-ubuntu
  stage: build
  script:
    - echo "Compiling the code..."
    - mkdir build && cd build
    - cmake .. -DCMAKE_BUILD_TYPE=Debug
    - make -j 8
    - rm cmake_install.cmake CMakeCache.txt Makefile
    - rm -rf CMakeFiles
    - rm -rf frontend/CMakeFiles
    - rm -rf frontend/Makefile frontend/cmake_install.cmake
  artifacts:
    paths:
      - build/

generate-llvm-ir-with-SCNUcc:
  needs: ["build-job"]
  tags:
      - dsc-ubuntu
  stage: test
  script:
      - cd build
      - mkdir our_irs log
      - python3 ../test-script/generate_llvm_ir_with_SCNUcc.py
  artifacts:
      paths:
      - build/
      when: always

compile-llvm-ir-with-llc:
  needs: ["generate-llvm-ir-with-SCNUcc"]
  tags:
      - dsc-ubuntu
  stage: test
  script:
      - cd build
      - mkdir our_asms our_exes our_output
      - python3 ../test-script/compile_llvm_ir_with_llvm.py
  artifacts:
      paths:
      - build/
      when: always

# TODO: Run exes generated by our compiler
# # CI当前只和test_cases\cases里面的out文件进行比对
compair-output:
  needs: ["compile-llvm-ir-with-llc"]
  tags:
      - dsc-ubuntu
  stage: test
  script:
      - cd build
      - python3 ../test-script/compair_output.py
      - python3 ../test-script/check_log.py
  artifacts:
      paths:
      - build/
      when: always